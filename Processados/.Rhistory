df_emprego_formal3 <- df_emprego_formal %>%
pivot_wider(names_from = ano,
values_from = `Demais setores`:Total)
i=1
repeat{
assign(str_glue('rais_CR_{i}'),
df_emprego_formal3 %>%
mutate(
df_e_ki = get(str_glue('Indústria de Transformação_{2016+i}')),
df_e_k = apply(.[which(names(df_emprego_formal3) == str_glue('Indústria de Transformação_{2016+i}'))], 2, sum ),
df2_e_ki = get(str_glue('Indústria de Transformação_{2017+i}')),
df2_e_k = apply(.[which(names(df_emprego_formal3) == str_glue('Indústria de Transformação_{2017+i}'))], 2, sum ),
# PRINCIPAL
CR = CR(df2_e_ki, df_e_ki, df2_e_k, df_e_k)
) %>% select(id_municipio, CR))
i = i + 1
if(i == 5){
df_rais.CR = left_join(rais_CR_1, rais_CR_2, by = 'id_municipio') %>%
left_join(rais_CR_3, by = 'id_municipio') %>%
left_join(rais_CR_4, by = 'id_municipio')
rm(list=ls(pattern = 'rais_CR_'))
break()
}
}
names(df_rais.CR)[2:5] <- c('2017-2018','2018-2019','2019-2020','2020-2021')
i=1
repeat{
assign(str_glue('rais_IHHm_{2016+i}'),
subset(df_emprego_formal2, ano == 2016+i) %>%
mutate(
df_e_ki = `Parnaíba`,
df_e_i = apply(.[4], 2, sum ),
df_E = apply(.[3], 2, sum ),
df_e_k = `Total`,
# PRINCIPAL
IHHm = IHHm(df_e_ki, df_e_i, df_e_k, df_E)
) %>% select(ano, Seção, IHHm)  %>% pivot_wider(names_from = ano, values_from = IHHm))
i = i + 1
if(i == 6){
df_rais.IHHm = left_join(rais_IHHm_2017, rais_IHHm_2018, by = 'Seção') %>%
left_join(rais_IHHm_2019, by = 'Seção') %>%
left_join(rais_IHHm_2020, by = 'Seção') %>%
left_join(rais_IHHm_2021, by = 'Seção')
rm(list=ls(pattern = 'rais_IHHm_'))
break()
}
}
dataset_names <- list('CL' = df_rais.CL,
'CR' = df_rais.CR,
'CE' = df_rais.CE,
'QL' = df_rais.QL,
'IHHM' = df_rais.IHHm)
#export each data frame to separate sheets in same Excel file
openxlsx::write.xlsx(dataset_names, file = 'indicadores2.xlsx')
dados_rais_2 <- dados_rais %>%
group_by(ano, cnae_2_subclasse, id_municipio) %>%
summarise(Vinculos = n())
# adicionando setores
dados_rais_2 <- dados_rais_2 %>% left_join(CNAE, by = c('cnae_2_subclasse'='cod_cnae')) %>%
mutate(Seção = case_when(
nm_secao %in% c("INDÚSTRIAS EXTRATIVAS") ~ "Extrativa mineral",
nm_secao %in% c("INDÚSTRIAS DE TRANSFORMAÇÃO") ~ "Indústria de transformação",
nm_secao %in% c("ÁGUA ESGOTO ATIVIDADES DE GESTÃO DE RESÍDUOS E DESCONTAMINAÇÃO") ~ "Serviços de utilidade pública",
nm_secao %in% c("CONSTRUÇÃO") ~ "Construção civil",
nm_secao %in% c("COMÉRCIO REPARAÇÃO DE VEÍCULOS AUTOMOTORES E MOTOCICLETAS") ~ "Comércio",
nm_secao %in% c("ADMINISTRAÇÃO PÚBLICA DEFESA E SEGURIDADE SOCIAL") ~ "Administração pública",
nm_secao %in% c("AGRICULTURA PECUÁRIA PRODUÇÃO FLORESTAL PESCA E AQUICULTURA") ~ "Agropecuária",
T ~ "Serviços"
))  %>% na.omit() %>% mutate(Setor = ifelse(Seção == 'AIndústria de transformação', # Setor de Análise
'S_Referencia',
'Demais setores'))
library(openxlsx)
library(tidyverse)
library(sf)
library(magrittr)
library(bigrquery)
library(openxlsx)
library(tidyverse)
library(sf)
library(magrittr)
library(bigrquery)
dados_rais_2 <- dados_rais %>%
group_by(ano, cnae_2_subclasse, id_municipio) %>%
summarise(Vinculos = n())
# adicionando setores
dados_rais_2 <- dados_rais_2 %>% left_join(CNAE, by = c('cnae_2_subclasse'='cod_cnae')) %>%
mutate(Seção = case_when(
nm_secao %in% c("INDÚSTRIAS EXTRATIVAS") ~ "Extrativa mineral",
nm_secao %in% c("INDÚSTRIAS DE TRANSFORMAÇÃO") ~ "Indústria de transformação",
nm_secao %in% c("ÁGUA ESGOTO ATIVIDADES DE GESTÃO DE RESÍDUOS E DESCONTAMINAÇÃO") ~ "Serviços de utilidade pública",
nm_secao %in% c("CONSTRUÇÃO") ~ "Construção civil",
nm_secao %in% c("COMÉRCIO REPARAÇÃO DE VEÍCULOS AUTOMOTORES E MOTOCICLETAS") ~ "Comércio",
nm_secao %in% c("ADMINISTRAÇÃO PÚBLICA DEFESA E SEGURIDADE SOCIAL") ~ "Administração pública",
nm_secao %in% c("AGRICULTURA PECUÁRIA PRODUÇÃO FLORESTAL PESCA E AQUICULTURA") ~ "Agropecuária",
T ~ "Serviços"
))  %>% na.omit() %>% mutate(Setor = ifelse(Seção == 'AIndústria de transformação', # Setor de Análise
'S_Referencia',
'Demais setores'))
df_emprego_formal <- dados_rais_2 %>%
group_by(ano, Setor, id_municipio) %>%
summarise(Vínculos = sum(Vinculos)) %>%
pivot_wider(names_from = 'Setor',
values_from = 'Vínculos',
values_fill = 0) %>%
mutate(Total = `S_Referencia` + `Demais setores`)
# adicionando setores
dados_rais_2 <- dados_rais_2 %>% left_join(CNAE, by = c('cnae_2_subclasse'='cod_cnae')) %>%
mutate(Seção = case_when(
nm_secao %in% c("INDÚSTRIAS EXTRATIVAS") ~ "Extrativa mineral",
nm_secao %in% c("INDÚSTRIAS DE TRANSFORMAÇÃO") ~ "Indústria de transformação",
nm_secao %in% c("ÁGUA ESGOTO ATIVIDADES DE GESTÃO DE RESÍDUOS E DESCONTAMINAÇÃO") ~ "Serviços de utilidade pública",
nm_secao %in% c("CONSTRUÇÃO") ~ "Construção civil",
nm_secao %in% c("COMÉRCIO REPARAÇÃO DE VEÍCULOS AUTOMOTORES E MOTOCICLETAS") ~ "Comércio",
nm_secao %in% c("ADMINISTRAÇÃO PÚBLICA DEFESA E SEGURIDADE SOCIAL") ~ "Administração pública",
nm_secao %in% c("AGRICULTURA PECUÁRIA PRODUÇÃO FLORESTAL PESCA E AQUICULTURA") ~ "Agropecuária",
T ~ "Serviços"
))  %>% na.omit() %>% mutate(Setor = ifelse(Seção == 'AIndústria de transformação', # Setor de Análise
'S_Referencia',
'Demais setores'))
dados_rais_2 <- dados_rais %>%
group_by(ano, cnae_2_subclasse, id_municipio) %>%
summarise(Vinculos = n())
dados_rais_2 <- dados_rais %>%
group_by(ano, cnae_2_subclasse, id_municipio) %>%
summarise(Vinculos = n())
# adicionando setores
dados_rais_2 <- dados_rais_2 %>% left_join(CNAE, by = c('cnae_2_subclasse'='cod_cnae')) %>%
mutate(Seção = case_when(
nm_secao %in% c("INDÚSTRIAS EXTRATIVAS") ~ "Extrativa mineral",
nm_secao %in% c("INDÚSTRIAS DE TRANSFORMAÇÃO") ~ "Indústria de transformação",
nm_secao %in% c("ÁGUA ESGOTO ATIVIDADES DE GESTÃO DE RESÍDUOS E DESCONTAMINAÇÃO") ~ "Serviços de utilidade pública",
nm_secao %in% c("CONSTRUÇÃO") ~ "Construção civil",
nm_secao %in% c("COMÉRCIO REPARAÇÃO DE VEÍCULOS AUTOMOTORES E MOTOCICLETAS") ~ "Comércio",
nm_secao %in% c("ADMINISTRAÇÃO PÚBLICA DEFESA E SEGURIDADE SOCIAL") ~ "Administração pública",
nm_secao %in% c("AGRICULTURA PECUÁRIA PRODUÇÃO FLORESTAL PESCA E AQUICULTURA") ~ "Agropecuária",
T ~ "Serviços"
))  %>% na.omit() %>% mutate(Setor = ifelse(Seção == 'Indústria de transformação', # Setor de Análise
'S_Referencia',
'Demais setores'))
df_emprego_formal <- dados_rais_2 %>%
group_by(ano, Setor, id_municipio) %>%
summarise(Vínculos = sum(Vinculos)) %>%
pivot_wider(names_from = 'Setor',
values_from = 'Vínculos',
values_fill = 0) %>%
mutate(Total = `S_Referencia` + `Demais setores`)
df_emprego_formal2 <- dados_rais_2 %>%
mutate(Regiao = ifelse(id_municipio == '2211100',
'M_Referencia',
'Outras cidades')) %>%
group_by(ano, Seção, Regiao) %>%
summarise(Vínculos = sum(Vinculos)) %>%
pivot_wider(names_from = 'Regiao',
values_from = 'Vínculos',
values_fill = 0) %>%
mutate(Total = `M_Referencia` + `Outras cidades`)
# adicionando os municipios
dados_rais_2 <- dados_rais_2 %>% left_join(piaui, by = c('id_municipio'='CD_MUN'))
QL <- function(e_ki, e_i, e_k, e) {
s_ki <- e_ki/e_i
s_i <- e_k/e
LQ <- s_ki/s_i
return(LQ)
}
IHHm <- function(e_ki, e_i, e_k, e) {
s_ki <- e_ki/e_i
s_i <- e_k/e
IHHm <- (s_ki - s_i)
return(round(IHHm,4))
}
CL = function(e_ki, e_i, e_k, e) {
s_ki <- e_ki/e_k
s_i <- e_i/e
CLh <- sum(abs(s_i - s_ki)) * .5
return(round(CLh,4))
}
CR <- function(e_ki0, e_ki1, e_k0, e_k1) {
s_ki0 <- e_ki0/e_k0
s_ki1 <- e_ki1/e_k1
CR <- (.5 * abs(s_ki1 - s_ki0))
return(round(CR,4))
}
CE <- function(e_ki, e_i, e_k, e) {
s_ki <- e_ki/e_i
s_i <- e_k/e
CEH <- sum(.5 * abs(s_ki - s_i))
return(round(CEH,4))
}
i=1
repeat{
assign(str_glue('rais_QL_{2016+i}'),
subset(df_emprego_formal, ano == 2016+i) %>%
mutate(
df_e_ki = `S_Referencia`,
df_e_i = Total,
df_E = sum(Total),
df_e_k = sum(`S_Referencia`),
# PRINCIPAL
QL = QL(df_e_ki, df_e_i, df_e_k, df_E)
) %>% select(ano, id_municipio, QL) %>% pivot_wider(names_from = ano, values_from = QL))
i = i + 1
if(i == 6){
df_rais.QL = left_join(rais_QL_2017, rais_QL_2018, by = "id_municipio") %>%
left_join(rais_QL_2019, by = "id_municipio") %>%
left_join(rais_QL_2020, by = "id_municipio") %>%
left_join(rais_QL_2021, by = "id_municipio")
rm(list=ls(pattern = 'rais_QL_'))
break()
}
}
i=1
repeat{
assign(str_glue('rais_CL_{2016+i}'),
subset(df_emprego_formal2, ano == 2016+i) %>%
mutate(
df_e_ki = `M_Referencia`,
df_e_i = apply(.[4], 2, sum ),
df_E = apply(.[3], 2, sum ),
df_e_k = `Total`,
# PRINCIPAL
CL = .5 * abs(df_e_ki/df_e_i - df_e_k/df_E)
) %>% select(ano, Seção, CL)  %>% pivot_wider(names_from = ano, values_from = CL))
i = i + 1
if(i == 6){
df_rais.CL = left_join(rais_CL_2017, rais_CL_2018, by = 'Seção') %>%
left_join(rais_CL_2019, by = 'Seção') %>%
left_join(rais_CL_2020, by = 'Seção') %>%
left_join(rais_CL_2021, by = 'Seção')
rm(list=ls(pattern = 'rais_CL_'))
break()
}
}
i=1
repeat{
assign(str_glue('rais_CE_{2016+i}'),
subset(df_emprego_formal, ano == 2016+i) %>%
mutate(
df_e_ki = `S_Referencia`,
df_e_i = Total,
df_E = apply(.[5], 2, sum ),
df_e_k = apply(.[5], 2, sum ),
# PRINCIPAL
CE = .5 * abs(df_e_ki/df_e_i - df_e_k/df_E)
) %>% select(ano, id_municipio, CE)  %>%
pivot_wider(names_from = ano, values_from = CE))
i = i + 1
if(i == 6){
df_rais.CE = left_join(rais_CE_2017, rais_CE_2018, by = 'id_municipio') %>%
left_join(rais_CE_2019, by = 'id_municipio') %>%
left_join(rais_CE_2020, by = 'id_municipio') %>%
left_join(rais_CE_2021, by = 'id_municipio')
rm(list=ls(pattern = 'rais_CE_'))
break()
}
}
df_emprego_formal3 <- df_emprego_formal %>%
pivot_wider(names_from = ano,
values_from = `Demais setores`:Total)
i=1
repeat{
assign(str_glue('rais_CR_{i}'),
df_emprego_formal3 %>%
mutate(
df_e_ki = get(str_glue('S_Referencia_{2016+i}')),
df_e_k = apply(.[which(names(df_emprego_formal3) == str_glue('S_Referencia_{2016+i}'))], 2, sum ),
df2_e_ki = get(str_glue('S_Referencia_{2017+i}')),
df2_e_k = apply(.[which(names(df_emprego_formal3) == str_glue('S_Referencia_{2017+i}'))], 2, sum ),
# PRINCIPAL
CR = CR(df2_e_ki, df_e_ki, df2_e_k, df_e_k)
) %>% select(id_municipio, CR))
i = i + 1
if(i == 5){
df_rais.CR = left_join(rais_CR_1, rais_CR_2, by = 'id_municipio') %>%
left_join(rais_CR_3, by = 'id_municipio') %>%
left_join(rais_CR_4, by = 'id_municipio')
rm(list=ls(pattern = 'rais_CR_'))
break()
}
}
names(df_rais.CR)[2:5] <- c('2017-2018','2018-2019','2019-2020','2020-2021')
i=1
repeat{
assign(str_glue('rais_IHHm_{2016+i}'),
subset(df_emprego_formal2, ano == 2016+i) %>%
mutate(
df_e_ki = `M_Referencia`,
df_e_i = apply(.[4], 2, sum ),
df_E = apply(.[3], 2, sum ),
df_e_k = `Total`,
# PRINCIPAL
IHHm = IHHm(df_e_ki, df_e_i, df_e_k, df_E)
) %>% select(ano, Seção, IHHm)  %>% pivot_wider(names_from = ano, values_from = IHHm))
i = i + 1
if(i == 6){
df_rais.IHHm = left_join(rais_IHHm_2017, rais_IHHm_2018, by = 'Seção') %>%
left_join(rais_IHHm_2019, by = 'Seção') %>%
left_join(rais_IHHm_2020, by = 'Seção') %>%
left_join(rais_IHHm_2021, by = 'Seção')
rm(list=ls(pattern = 'rais_IHHm_'))
break()
}
}
dataset_names <- list('CL' = df_rais.CL,
'CR' = df_rais.CR,
'CE' = df_rais.CE,
'QL' = df_rais.QL,
'IHHM' = df_rais.IHHm)
# exportanto para excel
openxlsx::write.xlsx(dataset_names, file = 'indicadores_wendell.xlsx')
{ # PRÉ-CONFIG
#install.packages('ggthemes')
#install.packages("extrafont")
library(tidyverse)
library(magrittr)
library(scales, gdata)
library(ggthemes)
library(ggrepel)
library(writexl)
library(extrafont)
loadfonts(device = "win")
knitr::opts_chunk$set(echo = TRUE)
setwd('C:/Users/Alexandre/OneDrive/Documentos/Monografia/Microdados/Processados')
#-- grupos correspondentes
i = 1
}
repeat {
#-- Criando as novas variáveis derivadas
# Gênero
assign(
x = str_glue('dados_sexo_{2015+i}'),
readRDS(str_glue('TAB_sexo_{2015+i}.rds'))
)
# Faixa Etária
assign(
x = str_glue('dados_Faixa_Etária_{2015+i}'),
readRDS(str_glue('TAB_Faixa Etária_{2015+i}.rds'))
)
# Raça
assign(
x = str_glue('dados_Raça_{2015+i}'),
readRDS(str_glue('TAB_Raça_{2015+i}.rds'))
)
# Zona Habitada
assign(
x = str_glue('dados_Zona_Habitada_{2015+i}'),
readRDS(str_glue('TAB_Zona Habitada_{2015+i}.rds'))
)
# Tipo de Região
assign(
x = str_glue('dados_Tipo_de_Região_{2015+i}'),
readRDS(str_glue('TAB_Tipo de Região_{2015+i}.rds'))
)
# Setor
assign(
x = str_glue('dados_Setor_{2015+i}'),
readRDS(str_glue('TAB_Setor_{2015+i}.rds'))
)
# Ciclo Escolar
assign(
x = str_glue('dados_Ciclo_Escolar_{2015+i}'),
readRDS(str_glue('TAB_Ciclo Escolar_{2015+i}.rds'))
)
# Grupo de Rendimento
assign(
x = str_glue('dados_Grupo_de_Rendimento_{2015+i}'),
readRDS(str_glue('TAB_Grupo de Rendimento_{2015+i}.rds'))
)
# Experiência
assign(
x = str_glue('dados_Experiência_{2015+i}'),
readRDS(str_glue('TAB_Experiência_{2015+i}.rds'))
)
# Faixa de horas trabalho
assign(
x = str_glue('dados_Faixa_horas_trabalho_{2015+i}'),
readRDS(str_glue('TAB_Faixa de horas trabalho_{2015+i}.rds'))
)
# Condição
assign(
x = str_glue('dados_Condição_{2015+i}'),
readRDS(str_glue('TAB_Condição_{2015+i}.rds'))  %>% na.omit()
)
i = i+1
if (i > 7) {
# SEXO
df_sexo <- bind_rows(dados_sexo_2016, dados_sexo_2017, dados_sexo_2018,
dados_sexo_2019, dados_sexo_2020, dados_sexo_2021,
dados_sexo_2022)
# Faixa_Etária
df_Faixa_Etária <- bind_rows(dados_Faixa_Etária_2016, dados_Faixa_Etária_2017, dados_Faixa_Etária_2018,
dados_Faixa_Etária_2019, dados_Faixa_Etária_2020, dados_Faixa_Etária_2021,
dados_Faixa_Etária_2022)
# Raça
df_Raça <- bind_rows(dados_Raça_2016, dados_Raça_2017, dados_Raça_2018,
dados_Raça_2019, dados_Raça_2020, dados_Raça_2021,
dados_Raça_2022)
# Zona_Habitada
df_Zona_Habitada <- bind_rows(dados_Zona_Habitada_2016, dados_Zona_Habitada_2017, dados_Zona_Habitada_2018,
dados_Zona_Habitada_2019, dados_Zona_Habitada_2020, dados_Zona_Habitada_2021,
dados_Zona_Habitada_2022)
# Tipo_de_Região
df_Tipo_de_Região <- bind_rows(dados_Tipo_de_Região_2016, dados_Tipo_de_Região_2017, dados_Tipo_de_Região_2018,
dados_Tipo_de_Região_2019, dados_Tipo_de_Região_2020, dados_Tipo_de_Região_2021,
dados_Tipo_de_Região_2022)
# Setor
df_Setor <- bind_rows(dados_Setor_2016, dados_Setor_2017, dados_Setor_2018,
dados_Setor_2019, dados_Setor_2020, dados_Setor_2021,
dados_Setor_2022)
# Ciclo_Escolar
df_Ciclo_Escolar <- bind_rows(dados_Ciclo_Escolar_2016, dados_Ciclo_Escolar_2017,
dados_Ciclo_Escolar_2018, dados_Ciclo_Escolar_2019,
dados_Ciclo_Escolar_2020, dados_Ciclo_Escolar_2021,
dados_Ciclo_Escolar_2022)
# Grupo_de_Rendimento
df_Grupo_de_Rendimento <- bind_rows(
dados_Grupo_de_Rendimento_2016, dados_Grupo_de_Rendimento_2017,
dados_Grupo_de_Rendimento_2018, dados_Grupo_de_Rendimento_2019,
dados_Grupo_de_Rendimento_2020, dados_Grupo_de_Rendimento_2021,
dados_Grupo_de_Rendimento_2022)
# Experiência
df_Experiência <- bind_rows(dados_Experiência_2016, dados_Experiência_2017, dados_Experiência_2018,
dados_Experiência_2019, dados_Experiência_2020, dados_Experiência_2021,
dados_Experiência_2022)
# Faixa_horas_trabalho
df_Faixa_horas_trabalho <- bind_rows(
dados_Faixa_horas_trabalho_2016, dados_Faixa_horas_trabalho_2017,
dados_Faixa_horas_trabalho_2018, dados_Faixa_horas_trabalho_2019,
dados_Faixa_horas_trabalho_2020, dados_Faixa_horas_trabalho_2021,
dados_Faixa_horas_trabalho_2022)
# Condição
df_Condição <- bind_rows(dados_Condição_2016, dados_Condição_2017, dados_Condição_2018,
dados_Condição_2019, dados_Condição_2020, dados_Condição_2021,
dados_Condição_2022)
i=1
rm(list=ls(pattern="dados_"))
break()
}
}
{
desocupação = sidrar::get_sidra(api = '/t/6397/n1/all/n2/2/n3/22/v/4099/p/last%2019/c58/95253/d/v4099%201')
desocupação %<>% select(10,7,5) %<>% as_tibble()
names(desocupação) = c('Trimestre','regiao','Taxa')
desocupação %<>% mutate(Ano = substr(Trimestre, 1, 4)) %>%
group_by(Ano, regiao) %>%
summarise(Taxa = mean(Taxa))
#c('2021','Brasil', 13.2)
#c('2021','Nordeste', 17.1)
#c('2021','Piauí', 13.6)
desocupação[19:21,1] = rep('2021',3)
desocupação[19:21,2] = c('Brasil','Nordeste','Piauí')
desocupação[19:21,3] = c(13.2,17.1,13.6)
#-- B
informalidade = df_Condição %>% group_by(regiao, Ano) %>%
summarise(informais = sum(informais, na.rm = T), ocupados = sum(ocupados, na.rm = T)) %>%
mutate(Infor = (informais/ocupados)*100) %>% select(1,2,5)
df_inicial = informalidade %>% merge(desocupação, by = c('Ano', 'regiao'))
}
names(df_inicial) <- c('Ano','Regiao','Informalidade', 'Desocupação')
graf <- df_inicial %>% pivot_longer(cols = c(Informalidade, Desocupação),
values_to = 'Taxa',
names_to = 'Indicador')
graf$Taxa[graf$Indicador == 'Desocupação'] = graf$Taxa[graf$Indicador == 'Desocupação'] * 3
graf$Taxa <- round(graf$Taxa,1)
graf %<>% mutate(Regiao = case_when(Regiao == 'Brasil' ~ '(a) Brasil',
Regiao == 'Nordeste' ~ '(b) Nordeste',
Regiao == 'Piauí' ~ '(c) Piauí'))
graf0 =
graf %>%
ggplot(aes(x = Ano, color = `Indicador`, group = `Indicador`, y=Taxa),
stat = 'identity', position = "dodge") +
geom_line(alpha = 0.8, stroke = 0, size = 1) +
geom_point(aes(shape=`Indicador`)) +
scale_y_continuous(
#Informalidade
name = "Taxa de informalidade (%)",
#Desocupação
sec.axis = sec_axis(~.*.3, name="Taxa de desocupação (%)",breaks = seq(9,20,2)),
breaks = seq(30,60,5)
) +
labs(title = "Tabela: informalidade e desocupação",
x = 'Período',
color = "Taxa:") +
scale_color_excel_new() +
facet_wrap( ~ Regiao, nrow = 1) +
theme_bw(16) +
geom_text_repel(data = graf %>% filter(Ano == 2016),
aes(label = paste(ifelse(Indicador == 'Desocupação', round(Taxa/3,1), Taxa),'%',sep='')),
size=3.4, direction='y', force=.5, color = "black", nudge_x = -.5)+#, hjust = "left") +
geom_text_repel(data = graf %>% filter(Ano == 2022),
aes(label = paste(ifelse(Indicador == 'Desocupação', round(Taxa/3,1), Taxa),'%',sep='')),
size=3.4, direction='y', force=.5, color = "black", nudge_x = .5)+#, hjust = "right") +
scale_x_discrete() +
theme(axis.title = element_text(size = 12),
axis.title.y = element_text(size = 10.5),
axis.text.x = element_text(size = 10, color = 'black'),
axis.text.y = element_text(size = 9.5, face = 'bold', color = 'black'),
legend.title = element_text(size = 12),
legend.position = 'bottom',
legend.text=element_text(size=12),
legend.background = element_rect(fill="ghostwhite", size=1),
plot.title = element_blank(),
axis.ticks = element_line(colour = "grey70", size = 0.2),
panel.grid.major = element_line(colour = "grey70", size = 0.1),
panel.grid.minor = element_blank(),
#panel.grid.major.x = element_blank(),
strip.background = element_blank(),
strip.text = element_text(size = 12)) +
guides(
colour = guide_legend(""),
shape = guide_legend(""))
graf0
ggsave(plot = graf0, file = "Imgs/graf_inicial.bmp", dpi = 200, width = 9.1, height = 4.2)
